package
{
   import flash.filesystem.File;
   import flash.filesystem.FileStream;

   public class LevelData
   {
      public static var maps:Array; // 储存关卡
      public static var file:File; // 文件
      public static var fileStream:FileStream;
      public static var difficulty:Array; // 难度标识数据
      public static var currentFile:Array; // 当前读取的文件

      /*
         下面这个数组是关卡数据，这里是关于这坨数组的解释
         这是个五维数组，由外到内依次是关卡配置，全部关卡&难度&作者，单个关卡，单个天体，天体的属性值
         最外层用于区分不同地图集，每个地图集占该层一个数组
         每个地图集包含两个数组，第一个是全部的关卡数据，第二个首项为作者名，其余项是与关卡一一对应的难度值，1-4分别为绿蓝黄红
         关卡数据中每一项对应一个关卡，关卡中每一项对应一个天体
         天体数据含义：[x坐标，y坐标，天体类型，大小，所属势力，轨道，轨道速度，兵力]，详见GameScene.as和Node.as
      */
      public static var data:Array = [[[[[352, 472, 0, 0.6, 1, -1], [672, 296, 0, 0.3, 0, -1]], [[512, 288, 0, 0.6, 1, -1], [384, 480, 0, 0.3, 2, -1], [640, 480, 0, 0.3, 0, -1]], [[272, 296, 0, 0.6, 1, -1], [752, 472, 0, 0.3, 2, -1], [592, 296, 0, 0.3, 0, -1], [432, 472, 0, 0.3, 0, -1]], [[272, 472, 0, 0.5, 1, -1], [752, 296, 0, 0.3, 2, -1], [384, 264, 0, 0.3, 0, -1], [640, 504, 0, 0.3, 0, -1], [512, 384, 0, 0.4, 0, -1]], [[192, 384, 0, 0.5, 1, -1], [832, 384, 0, 0.3, 2, -1], [392, 296, 0, 0.3, 0, -1], [392, 472, 0, 0.3, 0, -1], [632, 296, 0, 0.3, 0, -1], [632, 472, 0, 0.3, 0, -1]], [[344, 384, 0, 0.5, 1, -1], [680, 384, 0, 0.4, 2, -1], [512, 384, 0, 0.3, 0, -1], [512, 232, 0, 0.3, 0, -1], [512, 536, 0, 0.3, 0, -1]], [[192, 296, 0, 0.5, 1, -1], [832, 472, 0, 0.4, 2, -1], [560, 296, 0, 0.4, 0, -1], [464, 472, 0, 0.4, 0, -1], [688, 384, 0, 0.3, 0, -1], [336, 384, 0, 0.3, 0, -1]], [[272, 472, 0, 0.5, 1, -1], [752, 296, 0, 0.4, 2, -1], [512, 384, 0, 0.3, 0, -1], [400, 248, 0, 0.3, 0, -1], [624, 520, 0, 0.3, 0, -1], [408, 384, 3, 0.3, 0, -1], [408, 456, 3, 0.3, 0, -1], [616, 384, 3, 0.3, 0, -1], [616, 312, 3, 0.3, 0, -1]], [[192, 384, 0, 0.5, 1, -1], [832, 384, 0, 0.4, 2, -1], [512, 232, 0, 0.3, 0, -1], [512, 536, 0, 0.3, 0, -1], [360, 384, 0, 0.3, 0, -1], [664, 384, 0, 0.3, 0, -1], [544, 352, 3, 0.3, 0, -1], [480, 416, 3, 0.3, 0, -1], [480, 352, 3, 0.3, 0, -1], [544, 416, 3, 0.3, 0, -1]], [[432, 344, 0, 0.5, 1, -1], [592, 424, 0, 0.5, 2, -1], [432, 528, 0, 0.3, 0, -1], [592, 240, 0, 0.3, 0, -1], [832, 384, 0, 0.4, 0, -1], [192, 384, 0, 0.4, 0, -1], [712, 512, 0, 0.3, 0, -1], [312, 256, 0, 0.3, 0, -1]], [[144, 472, 0, 0.3, 1, -1], [880, 296, 0, 0.3, 2, -1], [272, 384, 0, 0.3, 0, -1], [456, 432, 0, 0.3, 0, -1], [568, 336, 0, 0.3, 0, -1], [752, 384, 0, 0.3, 0, -1], [392, 296, 0, 0.4, 0, -1], [632, 472, 0, 0.4, 0, -1], [144, 296, 0, 0.3, 1, -1], [880, 472, 0, 0.3, 2, -1]], [[600, 296, 3, 0.3, 0, -1], [600, 472, 3, 0.3, 0, -1], [752, 384, 0, 0.3, 2, -1], [252, 384, 0, 0.6, 1, -1], [432, 384, 1, 0.4, 0, -1]], [[512, 384, 1, 0.4, 0, -1], [352, 384, 3, 0.3, 0, -1], [192, 384, 3, 0.3, 0, -1], [832, 384, 3, 0.3, 0, -1], [672, 384, 3, 0.3, 0, -1], [272, 296, 0, 0.4, 1, -1], [272, 472, 0, 0.4, 1, -1], [752, 296, 0, 0.4, 2, -1], [752, 472, 0, 0.4, 2, -1], [424, 248, 0, 0.3, 0, -1], [424, 520, 0, 0.3, 0, -1], [600, 248, 0, 0.3, 0, -1], [600, 520, 0, 0.3, 0, -1]], [[512, 384, 3, 0.3, 0, -1], [512, 208, 3, 0.3, 0, -1], [512, 560, 3, 0.3, 0, -1], [192, 384, 1, 0.4, 0, -1], [832, 384, 1, 0.4, 0, -1], [384, 384, 0, 0.5, 1, -1], [640, 384, 0, 0.5, 2, -1], [280, 256, 0, 0.3, 0, -1], [280, 512, 0, 0.3, 0, -1], [744, 256, 0, 0.3, 0, -1], [744, 512, 0, 0.3, 0, -1]], [[352, 208, 3, 0.3, 0, -1], [352, 384, 3, 0.3, 0, -1], [352, 560, 3, 0.3, 0, -1], [672, 384, 3, 0.3, 0, -1], [672, 208, 3, 0.3, 0, -1], [672, 560, 3, 0.3, 0, -1], [192, 472, 1, 0.4, 0, -1], [512, 384, 1, 0.4, 0, -1], [832, 296, 1, 0.4, 0, -1], [192, 296, 0, 0.4, 1, -1], [832, 472, 0, 0.4, 2, -1], [512, 248, 0, 0.3, 0, -1], [512, 520, 0, 0.3, 0, -1]], [[192, 384, 0, 0.5, 1, -1], [672, 384, 4, 0.3, 0, -1], [832, 384, 0, 0.5, 2, -1], [352, 296, 0, 0.3, 0, -1], [352, 472, 0, 0.3, 0, -1]], [[304, 384, 4, 0.3, 0, -1], [720, 384, 4, 0.3, 0, -1], [192, 296, 0, 0.3, 1, -1], [192, 472, 0, 0.3, 1, -1], [832, 296, 0, 0.3, 2, -1], [832, 472, 0, 0.3, 2, -1], [512, 296, 3, 0.3, 0, -1], [512, 472, 3, 0.3, 0, -1], [432, 384, 0, 0.4, 0, -1], [592, 384, 0, 0.4, 0, -1], [336, 248, 0, 0.3, 0, -1], [688, 248, 0, 0.3, 0, -1], [336, 520, 0, 0.3, 0, -1], [688, 520, 0, 0.3, 0, -1]], [[512, 384, 1, 0.4, 0, -1], [272, 248, 4, 0.3, 0, -1], [272, 520, 4, 0.3, 0, -1], [752, 248, 4, 0.3, 0, -1], [752, 520, 4, 0.3, 0, -1], [392, 312, 0, 0.3, 0, -1], [632, 312, 0, 0.3, 0, -1], [192, 384, 0, 0.5, 1, -1], [832, 384, 0, 0.5, 2, -1], [392, 456, 0, 0.3, 0, -1], [632, 456, 0, 0.3, 0, -1]], [[512, 384, 4, 0.3, 0, -1], [448, 320, 3, 0.3, 0, -1], [576, 320, 3, 0.3, 0, -1], [576, 448, 3, 0.3, 0, -1], [448, 448, 3, 0.3, 0, -1], [360, 384, 0, 0.3, 0, -1], [512, 232, 0, 0.3, 0, -1], [512, 536, 0, 0.3, 0, -1], [664, 384, 0, 0.3, 0, -1], [192, 384, 1, 0.4, 0, -1], [832, 384, 1, 0.4, 0, -1], [272, 264, 0, 0.4, 1, -1], [272, 504, 0, 0.4, 1, -1], [752, 264, 0, 0.4, 2, -1], [752, 504, 0, 0.4, 2, -1]], [[512, 384, 0, 0.4, 0, -1], [352, 384, 0, 0.3, 0, 0], [672, 384, 0, 0.3, 0, 0], [192, 384, 0, 0.5, 1, -1], [832, 384, 0, 0.5, 2, -1]], [[368, 384, 0, 0.4, 1, -1], [656, 384, 0, 0.4, 2, -1], [368, 240, 0, 0.3, 0, 0], [368, 528, 0, 0.3, 0, 0], [512, 384, 0, 0.3, 0, 101], [800, 384, 0, 0.3, 0, 101]], [[512, 384, 4, 0.3, 0, -1], [512, 256, 0, 0.3, 0, 0], [384, 384, 0, 0.3, 0, 0], [640, 384, 0, 0.3, 0, 0], [512, 512, 0, 0.3, 0, 0], [232, 296, 0, 0.3, 1, -1], [232, 472, 0, 0.3, 1, -1], [792, 296, 0, 0.3, 2, -1], [792, 472, 0, 0.3, 2, -1]], [[368, 384, 1, 0.4, 1, -1], [656, 384, 1, 0.4, 2, -1], [512, 384, 0, 0.3, 0, 101], [800, 384, 0, 0.3, 0, 101], [656, 240, 0, 0.3, 0, 101], [656, 528, 0, 0.3, 0, 101], [472, 480, 0, 0.3, 0, 0], [472, 288, 0, 0.3, 0, 0], [264, 288, 0, 0.3, 0, 0], [264, 480, 0, 0.3, 0, 0]], [[512, 248, 0, 0.3, 1, -1], [512, 520, 0, 0.3, 0, -1], [640, 312, 0, 0.3, 0, -1], [640, 456, 0, 0.3, 2, -1], [384, 312, 0, 0.3, 0, -1], [384, 456, 0, 0.3, 3, -1]], [[112, 384, 3, 0.3, 0, -1], [288, 384, 3, 0.3, 0, -1], [912, 384, 3, 0.3, 0, -1], [736, 384, 3, 0.3, 0, -1], [512, 296, 3, 0.3, 0, -1], [512, 472, 3, 0.3, 0, -1], [192, 272, 0, 0.4, 1, -1], [192, 496, 0, 0.4, 4, -1], [832, 272, 0, 0.4, 2, -1], [840, 496, 0, 0.4, 3, -1], [624, 232, 0, 0.3, 0, -1], [624, 536, 0, 0.3, 0, -1], [400, 384, 1, 0.4, 0, -1], [624, 384, 1, 0.4, 0, -1], [400, 232, 0, 0.3, 0, -1], [400, 536, 0, 0.3, 0, -1]], [[512, 384, 1, 0.4, 1, -1], [240, 248, 0, 0.3, 0, -1], [240, 520, 0, 0.3, 0, -1], [784, 248, 0, 0.3, 0, -1], [784, 520, 0, 0.3, 0, -1], [512, 240, 0, 0.3, 2, 0], [640, 312, 0, 0.3, 0, 0], [640, 456, 0, 0.3, 3, 0], [512, 528, 0, 0.3, 0, 0], [384, 456, 0, 0.3, 4, 0], [384, 312, 0, 0.3, 0, 0]], [[240, 384, 4, 0.3, 0, -1], [784, 384, 4, 0.3, 0, -1], [376, 384, 0, 0.3, 0, 0], [104, 384, 0, 0.3, 0, 0], [512, 384, 4, 0.3, 0, -1], [608, 288, 0, 0.3, 2, 104], [416, 480, 0, 0.3, 4, 104], [648, 384, 0, 0.3, 0, 1], [920, 384, 0, 0.3, 0, 1], [240, 248, 0, 0.3, 0, 0], [240, 520, 0, 0.3, 0, 0], [784, 248, 0, 0.3, 0, 1], [784, 520, 0, 0.3, 0, 1], [608, 480, 0, 0.3, 3, 104], [416, 288, 0, 0.3, 1, 104]], [[512, 400, 6, 0.5, 0, -1], [512, 248, 0, 0.3, 1, -1], [352, 472, 0, 0.3, 0, -1], [672, 472, 0, 0.3, 0, -1], [832, 496, 0, 0.4, 2, -1], [192, 496, 0, 0.4, 3, -1], [752, 336, 0, 0.4, 0, -1], [272, 336, 0, 0.4, 0, -1], [920, 376, 0, 0.3, 0, -1], [104, 376, 0, 0.3, 0, -1]], [[512, 384, 6, 0.5, 0, -1], [512, 224, 0, 0.3, 1, 0], [512, 544, 0, 0.3, 0, 0], [656, 464, 0, 0.3, 2, 0], [656, 304, 0, 0.3, 0, 0], [368, 304, 0, 0.3, 0, 0], [368, 464, 0, 0.3, 3, 0], [208, 384, 1, 0.4, 0, -1], [816, 384, 1, 0.4, 0, -1], [904, 264, 0, 0.5, 0, -1], [904, 504, 0, 0.5, 0, -1], [120, 264, 0, 0.5, 0, -1], [120, 504, 0, 0.5, 0, -1]], [[352, 384, 6, 0.5, 0, -1], [672, 384, 6, 0.5, 0, -1], [184, 384, 4, 0.3, 0, -1], [840, 384, 4, 0.3, 0, -1], [440, 232, 0, 0.3, 0, -1], [440, 536, 0, 0.3, 0, -1], [256, 504, 0, 0.4, 4, -1], [256, 264, 0, 0.4, 1, -1], [768, 496, 0, 0.4, 3, -1], [768, 272, 0, 0.4, 2, -1], [584, 232, 0, 0.3, 0, -1], [584, 536, 0, 0.3, 0, -1], [512, 328, 3, 0.3, 0, -1], [512, 440, 3, 0.3, 0, -1]], [[368, 384, 1, 0.4, 0, -1], [656, 384, 1, 0.4, 0, -1], [512, 384, 0, 0.3, 0, 101], [800, 384, 0, 0.3, 0, 101], [656, 240, 0, 0.3, 0, 101], [656, 528, 0, 0.3, 0, 101], [472, 480, 0, 0.3, 0, 0], [472, 288, 0, 0.3, 0, 0], [264, 288, 0, 0.3, 0, 0], [264, 480, 0, 0.3, 0, 0], [136, 264, 6, 0.5, 1, -1], [888, 264, 6, 0.5, 2, -1], [888, 504, 6, 0.5, 3, -1], [136, 504, 6, 0.5, 4, -1]], [[512, 384, 5, 0.4, 0, -1], [512, 272, 4, 0.3, 5, 0], [512, 496, 4, 0.3, 5, 0], [608, 328, 4, 0.3, 5, 0], [416, 328, 4, 0.3, 5, 0], [144, 384, 6, 0.5, 1, -1], [416, 440, 4, 0.3, 5, 0], [608, 440, 4, 0.3, 5, 0], [880, 384, 6, 0.5, 2, -1], [288, 384, 0, 0.3, 0, -1], [736, 384, 0, 0.3, 0, -1], [232, 240, 0, 0.4, 0, -1], [232, 528, 0, 0.4, 0, -1], [792, 240, 0, 0.4, 0, -1], [792, 528, 0, 0.4, 0, -1]], [[352, 208, 3, 0.3, 0, -1], [352, 384, 3, 0.3, 0, -1], [672, 384, 3, 0.3, 0, -1], [672, 560, 3, 0.3, 0, -1], [576, 264, 6, 0.5, 2, -1], [448, 504, 6, 0.5, 3, -1], [416, 296, 0, 0.3, 0, -1], [608, 472, 0, 0.3, 0, -1], [112, 240, 1, 0.4, 0, -1], [912, 528, 1, 0.4, 0, -1], [192, 544, 0, 0.3, 1, -1], [192, 384, 0, 0.4, 1, -1], [832, 224, 0, 0.3, 4, -1], [832, 384, 0, 0.4, 4, -1], [920, 296, 0, 0.3, 4, -1], [104, 472, 0, 0.3, 1, -1], [256, 248, 0, 0.3, 1, -1], [768, 520, 0, 0.3, 4, -1]], [[512, 384, 3, 0.3, 0, -1], [512, 312, 0, 0.3, 1, 100], [512, 456, 0, 0.3, 1, 100], [440, 384, 0, 0.3, 1, 100], [584, 384, 0, 0.3, 1, 100], [512, 208, 0, 0.3, 2, 0], [512, 560, 0, 0.3, 2, 0], [336, 384, 0, 0.3, 2, 0], [688, 384, 0, 0.3, 2, 0], [216, 384, 4, 0.3, 0, -1], [808, 384, 4, 0.3, 0, -1], [128, 296, 0, 0.3, 3, 109], [128, 472, 0, 0.3, 3, 109], [304, 472, 0, 0.3, 3, 109], [304, 296, 0, 0.3, 3, 109], [720, 296, 0, 0.3, 4, 110], [720, 472, 0, 0.3, 4, 110], [896, 296, 0, 0.3, 4, 110], [896, 472, 0, 0.3, 4, 110]], [[432, 384, 0, 0.3, 3, -1], [592, 384, 0, 0.3, 2, -1], [512, 304, 0, 0.3, 2, -1], [512, 464, 0, 0.3, 3, -1], [672, 304, 0, 0.3, 2, -1], [592, 224, 0, 0.3, 2, -1], [432, 544, 0, 0.3, 3, -1], [352, 464, 0, 0.3, 3, -1], [752, 224, 0, 0.3, 2, -1], [272, 544, 0, 0.3, 3, -1], [912, 384, 0, 0.3, 4, -1], [832, 464, 0, 0.3, 4, -1], [752, 544, 0, 0.3, 4, -1], [912, 544, 0, 0.3, 4, -1], [192, 304, 0, 0.3, 1, -1], [112, 384, 0, 0.3, 1, -1], [272, 224, 0, 0.3, 1, -1], [112, 224, 0, 0.3, 1, -1], [272, 384, 4, 0.3, 0, -1], [752, 384, 4, 0.3, 0, -1], [112, 544, 1, 0.4, 0, -1], [912, 224, 1, 0.4, 0, -1]], [[512, 384, 5, 0.4, 6, -1], [512, 272, 4, 0.3, 6, 0], [512, 496, 4, 0.3, 6, 0], [608, 328, 4, 0.3, 6, 0], [416, 328, 4, 0.3, 6, 0], [416, 440, 4, 0.3, 6, 0], [608, 440, 4, 0.3, 6, 0], [304, 312, 0, 0.3, 1, -1], [120, 248, 6, 0.5, 1, -1], [120, 520, 6, 0.5, 4, -1], [904, 248, 6, 0.5, 2, -1], [904, 520, 6, 0.5, 3, -1], [248, 216, 0, 0.3, 1, -1], [248, 552, 0, 0.3, 4, -1], [304, 456, 0, 0.3, 4, -1], [360, 216, 0, 0.3, 1, -1], [360, 552, 0, 0.3, 4, -1], [192, 384, 1, 0.4, 0, -1], [720, 312, 0, 0.3, 2, -1], [720, 456, 0, 0.3, 3, -1], [664, 552, 0, 0.3, 3, -1], [664, 216, 0, 0.3, 2, -1], [776, 216, 0, 0.3, 2, -1], [776, 552, 0, 0.3, 3, -1], [832, 384, 1, 0.4, 0, -1]]], ["NICO TUASON", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 2, 2, 2, 1, 1, 1, 1, 1, 2, 3, 2, 3]]];

      public function LevelData()
      {
         super();
      }

      public static function init():void // 加载文件
      {
         file = File.applicationStorageDirectory.resolvePath("data.txt"); // 读取文件Data.txt
         fileStream = new FileStream();
         if (!file.exists) // 文件不存在时写入默认数据
         {
            currentFile = data[Globals.currentData];
            maps = currentFile[0];
            difficulty = currentFile[1];
            save(); // 保存文件
         }
         else // 文件存在时
         {
            load(); // 导入文件
         }
      }

      public static function save():void // 保存关卡文件
      {
         fileStream.open(file, "write"); // 以写入模式打开文件
         fileStream.writeUTFBytes(JSON.stringify(data)); // 写入Data
         fileStream.close(); // 关闭文件
      }

      public static function load():void // 导入关卡文件
      {
         fileStream.open(file, "read"); // 以只读模式打开文件
         var _data:String = String(fileStream.readMultiByte(fileStream.bytesAvailable, "utf-8")); // 按utf-8编码读取文件并转化为字符串
         fileStream.close(); // 关闭文件
         data = JSON.parse(_data) as Array; // 将文件内容转化为字符串并写入Data
         currentFile = data[Globals.currentData]; // 读取当前配置
         maps = currentFile[0]; // 设置maps
         difficulty = currentFile[1]; // 设置Difficulty
      }
   }
}
